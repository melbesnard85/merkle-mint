{
    "contractName": "MerkleMintCore",
    "abi": [
        {
            "constant": true,
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "getApproved",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "tokenOfOwnerByIndex",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "unpause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "isPauser",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "string",
                    "name": "name",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "symbol",
                    "type": "string"
                }
            ],
            "name": "initialize",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "tokenByIndex",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "string",
                    "name": "tokenURI",
                    "type": "string"
                }
            ],
            "name": "mintWithTokenURI",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "paused",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "ownerOf",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "renouncePauser",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "initialize",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "addPauser",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "pause",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "addMinter",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "renounceMinter",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "isMinter",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "_data",
                    "type": "bytes"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "initialize",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "tokenURI",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "internalType": "string",
                    "name": "TokenName",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "TokenSymbol",
                    "type": "string"
                },
                {
                    "internalType": "address[]",
                    "name": "minters",
                    "type": "address[]"
                },
                {
                    "internalType": "address[]",
                    "name": "pausers",
                    "type": "address[]"
                }
            ],
            "name": "initialize",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                }
            ],
            "name": "isApprovedForAll",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "Paused",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "Unpaused",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "PauserAdded",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "PauserRemoved",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "MinterAdded",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "MinterRemoved",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "approved",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "ApprovalForAll",
            "type": "event"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintWithTokenURI\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"TokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"TokenSymbol\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"minters\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"pausers\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"see https://eips.ethereum.org/EIPS/eip-721Based on OpenZeppelin Contracts Ethereum Packagesee https://github.com/OpenZeppelin/openzeppelin-contracts-ethereum-package\",\"methods\":{\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"initialize()\":{\"details\":\"Constructor function.\"},\"initialize(string,string)\":{\"details\":\"Constructor function\"},\"initialize(string,string,address[],address[])\":{\"details\":\"Initialize the Token Contract with Minters and Pausers. The name+symbol are hardCoded.\",\"params\":{\"minters\":\"array of addresses that are allowed to mint.\",\"pausers\":\"array of addresses that are allowed to Pause.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"mintWithTokenURI(address,uint256,string)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"tokenId\":\"The token id to mint.\",\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"pause()\":{\"details\":\"Called by a pauser to pause, triggers stopped state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"supportsInterface(bytes4)\":{\"details\":\"See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"unpause()\":{\"details\":\"Called by a pauser to unpause, returns to normal state.\"}},\"title\":\"Complete ERC721 Non-Fungible Token Standard basic implementation with Metadata, Minting, and Pause Functionality\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/dennison/Documents/MerkleMint/contracts/MerkleMintCore.sol\":\"MerkleMintCore\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/dennison/Documents/MerkleMint/contracts/MerkleMintCore.sol\":{\"keccak256\":\"0x0a85d9a4d7d37bafac03c37d3618bdc903a11c50c5798d1ba81aa7b9d43ecccb\",\"urls\":[\"bzz-raw://d3337318284923098ea85920c88476a7807a2f056bde5b74b2ea419afb2b02a0\",\"dweb:/ipfs/QmP4ScSTFQgy1CEZeLUZ9L4dAbPTmzDqSeN2YUYwTFuqyM\"]},\"/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0d4306da5305cb78f09c70c18ec86dbc66f22fa5ade90edc20e1ab88e16d4d10\",\"urls\":[\"bzz-raw://c89dee1b8e96cb83f529b8b5c93be6b420c1913363a3fed01241942f08cc968f\",\"dweb:/ipfs/QmfWWwzg9hah3YwZRFWvAwq91HLjCHkKnxXqP6uLGURUou\"]},\"/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xc06f3204db223281e785616976ba51342723fff507714f089932620d007d7fa9\",\"urls\":[\"bzz-raw://a6d570321d661d74e34399d61231ea579c9bebedb8811e4def9aec1d21a764d3\",\"dweb:/ipfs/Qme42iAverwUuJinFnp5aXGayG9HcVpMgqeFxDrbVbZi6V\"]},\"/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/roles/PauserRole.sol\":{\"keccak256\":\"0x49094ce8d37fc2e78090d0aeee3c353d9ded08d07bd5e071bf67bd11540fbad9\",\"urls\":[\"bzz-raw://90ddae917f8a7ed89a1e2ddcb2695b924726e68ea8703195347353859856ed58\",\"dweb:/ipfs/QmRFjLrMX2yc8CEtKanUZCKDmcq9xoQhemHvtsignUA4w1\"]},\"/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5eb69360d3441ab2ee799bd7c007cccbffb0896f12b2dfe1456193e2aa180a11\",\"urls\":[\"bzz-raw://072e8b5a1b5acfc2acba9b6fb87d1dc57065aad44572617ad46b014074969eb3\",\"dweb:/ipfs/QmVTDHUriaxBJqiWCWgWC8vYaYYfXSz883LsowzTx1DcpK\"]},\"/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xd50971d2e4bf04882d4ff0b96ce5462143b9d1466dbaf566ec9cee6c2c5f60ca\",\"urls\":[\"bzz-raw://f495f24eba5f14391eab3dc40a338f3483965c06d6daf2a0335af851e9ddb912\",\"dweb:/ipfs/QmUvsdH83yTu4pVNuN4JF3uzA3AxFZVoPLVGBSZJeEZ9Cp\"]},\"/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x661553e43d7c4fbb2de504e5999fd5c104d367488350ed5bf023031bd1ba5ac5\",\"urls\":[\"bzz-raw://b40442c5b350b57b88a081a1eacd2bac962d4ecc1f029f5447a18986f08f6f14\",\"dweb:/ipfs/QmV7wjtRf11ibUHh4g8JjuhMpy68pPhV95L2y46UBoRfsZ\"]},\"/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0xc237b04be4e2ec4a36220662d80593559898e0b1b902097f79792066deecf55d\",\"urls\":[\"bzz-raw://f68991db3303d123627d87eb6e9ab274223236ce40ec0b30d2d18d7e2b6ecf22\",\"dweb:/ipfs/QmXDEdvRNGhZwsKfJqV6fi4zvFm5TUeX1LndoK9KjErSUd\"]},\"/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzz-raw://d62d769b2219d5de39013093412623e624fa887f871826ea3bae6052ee893610\",\"dweb:/ipfs/QmV3yVktya1s617QmuzQR2CfuJgUi3dR2xEZY9ecmqZ2G1\"]},\"/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x7b1832a1d64b93640ab2d3e93f104d8aaa3d4b16ee73bfc41b1fbf240954a739\",\"urls\":[\"bzz-raw://e1ec7f8ef69ac51ce860a3a67ad9c08030f0994113719ebbbac271d1370f893c\",\"dweb:/ipfs/QmbkrVmVeFESspdj84tDG5MWYzAKAm7w6Vxcq62rmmSJnx\"]},\"/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x7705690dc893d86b869c87ec3c4b8374c17848bf7483ed097f8e97be142cfa37\",\"urls\":[\"bzz-raw://e929cd48c4c4c385a3e9fad6327cb427551da5300f9df3aba4d28f258762b04a\",\"dweb:/ipfs/QmYfhrv5JVB9o6B653bmNM1kfE6Hnkn7HhjVRLoNtn7EMf\"]},\"/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0x6d26248f5591a3d80861b82533f62ec6edeca66076fc740f11d10a780e9702b8\",\"urls\":[\"bzz-raw://42f563c9249f5a9bea2aba16d1e275f27eb6324f961ef992352bc7e5dedf0f82\",\"dweb:/ipfs/QmdutxvTWWPc4jSBiwUVuaNjaAAmWav6zxUQhy2isnwV9G\"]},\"/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol\":{\"keccak256\":\"0xcf70a073cb1335eaf86a19d7e37c5361b050334e4701ba8297b112b5ffb3bba7\",\"urls\":[\"bzz-raw://8b9cedbf730a8e6970f7636d1dbf4bd25b0f44676e3c9faf9da0d83e8560fec9\",\"dweb:/ipfs/QmdJR5fNqdRE4QpxMxpeJ5eoNmnh82HsmjvfvGd37A31Tx\"]},\"/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Pausable.sol\":{\"keccak256\":\"0xec7c219d8f1a2d0c455adb0cde7e0492fdd8de48d2abf3e70339f48350b780aa\",\"urls\":[\"bzz-raw://250a022b54dbfb7690db08d8ed03339d1a1f6555d1066f1b3e6c359a85146163\",\"dweb:/ipfs/QmbFWW5ftUNWPnLhmeFiSc1cCYPRpqEpDXd1Dx19jKitUG\"]},\"/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x12baff0fe2c44456d7293b41452009d4fd384af5e99029c540b06bce39eb3174\",\"urls\":[\"bzz-raw://ebcf5ed9a1e1fa5a383c70e655490ea88beffa55235b179efa6e8f0f951fffee\",\"dweb:/ipfs/QmSrANjuTqzMVjNZnnwqzD3GrpqsgRgUASVhJQsFZ9g1YA\"]},\"/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xa34e36d0c9d8ec675fb886ef6fd54b6809c4f751b466c8e6e911fca72d099b1b\",\"urls\":[\"bzz-raw://98a3a59700b295763819a6b28bc7ef3f9898283e74c98066bae47d4110fcd3d5\",\"dweb:/ipfs/QmURP2rVqn6kMLAhBtjnCBfAjXUAGzBwZPADKf9ktiwTVq\"]},\"/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xdf8d138fac64bb343d4dcd933e723c734592601e580c2c7e312386796aae64aa\",\"urls\":[\"bzz-raw://f3b75c10cbec3ef85896169359d0e9239a4169a4132bf9c2683a68d42bcc6e7d\",\"dweb:/ipfs/QmcDfRe2S6oUTxvgMJs8bYUuirrVQBc1huvWkNrsWHsBry\"]},\"/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xadbfb7028fb0f851dc848a48b9e54e7c89ffd2c2edc12fa4ba9bb383dfaa83d9\",\"urls\":[\"bzz-raw://90dceab42713246639100b87d6650037d68e4a2ab2dd4b5768c3ed35d6b3a4a0\",\"dweb:/ipfs/QmQ42UW5nchMoYP9bU9F1AJga5chG8j92fCPkURpiDKsCu\"]},\"/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzz-raw://75ae8d04454d1511a2ed986cc8585736f05c5c25280683b3d24712a9f414a4bf\",\"dweb:/ipfs/Qmb3kNCoBUZdah1AgBBD4zMk898j5Qw8ahT1w5cCMYp5Y3\"]},\"/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzz-raw://6af1a35ad6aed2169ce9f44095438b3192cd6066903908f769d5c49a06a0caf8\",\"dweb:/ipfs/QmaH41CwJ7WrMQwSnbfCKuL2pd8bxF7sbGSLPZb6JaHBFF\"]}},\"version\":1}",
    "bytecode": "6080604052612beb806100136000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80636ef8d66d1161010457806398650275116100a2578063c4d66de811610071578063c4d66de8146107b4578063c87b56dd146107da578063d94cc0e0146107f7578063e985e9c514610a24576101da565b80639865027514610694578063a22cb4651461069c578063aa271e1a146106ca578063b88d4fde146106f0576101da565b806382dc1ec4116100de57806382dc1ec4146106385780638456cb591461065e57806395d89b4114610666578063983b2d561461066e576101da565b80636ef8d66d1461060257806370a082311461060a5780638129fc1c14610630576101da565b80633f4ba83a1161017c5780634f6ccce71161014b5780634f6ccce71461050757806350bb4e7f146105245780635c975abb146105dd5780636352211e146105e5576101da565b80633f4ba83a1461037a57806342842e0e1461038257806346fbf68e146103b85780634cd88b76146103de576101da565b8063095ea7b3116101b8578063095ea7b3146102d057806318160ddd146102fe57806323b872dd146103185780632f745c591461034e576101da565b806301ffc9a7146101df57806306fdde031461021a578063081812fc14610297575b600080fd5b610206600480360360208110156101f557600080fd5b50356001600160e01b031916610a52565b604080519115158252519081900360200190f35b610222610a71565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561025c578181015183820152602001610244565b50505050905090810190601f1680156102895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102b4600480360360208110156102ad57600080fd5b5035610b08565b604080516001600160a01b039092168252519081900360200190f35b6102fc600480360360408110156102e657600080fd5b506001600160a01b038135169060200135610b6a565b005b610306610bc4565b60408051918252519081900360200190f35b6102fc6004803603606081101561032e57600080fd5b506001600160a01b03813581169160208101359091169060400135610bca565b6103066004803603604081101561036457600080fd5b506001600160a01b038135169060200135610c26565b6102fc610ca5565b6102fc6004803603606081101561039857600080fd5b506001600160a01b03813581169160208101359091169060400135610d90565b610206600480360360208110156103ce57600080fd5b50356001600160a01b0316610dab565b6102fc600480360360408110156103f457600080fd5b810190602081018135600160201b81111561040e57600080fd5b82018360208201111561042057600080fd5b803590602001918460018302840111600160201b8311171561044157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561049357600080fd5b8201836020820111156104a557600080fd5b803590602001918460018302840111600160201b831117156104c657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610dc5945050505050565b6103066004803603602081101561051d57600080fd5b5035610eb1565b6102066004803603606081101561053a57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b81111561056957600080fd5b82018360208201111561057b57600080fd5b803590602001918460018302840111600160201b8311171561059c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610f17945050505050565b610206610f82565b6102b4600480360360208110156105fb57600080fd5b5035610f8c565b6102fc610fe0565b6103066004803603602081101561062057600080fd5b50356001600160a01b0316610ff2565b6102fc61105a565b6102fc6004803603602081101561064e57600080fd5b50356001600160a01b031661111d565b6102fc61116c565b610222611235565b6102fc6004803603602081101561068457600080fd5b50356001600160a01b0316611296565b6102fc6112e5565b6102fc600480360360408110156106b257600080fd5b506001600160a01b03813516906020013515156112f5565b610206600480360360208110156106e057600080fd5b50356001600160a01b031661134b565b6102fc6004803603608081101561070657600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b81111561074057600080fd5b82018360208201111561075257600080fd5b803590602001918460018302840111600160201b8311171561077357600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061135f945050505050565b6102fc600480360360208110156107ca57600080fd5b50356001600160a01b03166113b7565b610222600480360360208110156107f057600080fd5b5035611473565b6102fc6004803603608081101561080d57600080fd5b810190602081018135600160201b81111561082757600080fd5b82018360208201111561083957600080fd5b803590602001918460018302840111600160201b8311171561085a57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156108ac57600080fd5b8201836020820111156108be57600080fd5b803590602001918460018302840111600160201b831117156108df57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561093157600080fd5b82018360208201111561094357600080fd5b803590602001918460208302840111600160201b8311171561096457600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156109b357600080fd5b8201836020820111156109c557600080fd5b803590602001918460208302840111600160201b831117156109e657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611558945050505050565b61020660048036036040811015610a3a57600080fd5b506001600160a01b038135811691602001351661169e565b6001600160e01b03191660009081526033602052604090205460ff1690565b60d28054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610afd5780601f10610ad257610100808354040283529160200191610afd565b820191906000526020600020905b815481529060010190602001808311610ae057829003601f168201915b505050505090505b90565b6000610b13826116cc565b610b4e5760405162461bcd60e51b815260040180806020018281038252602c815260200180612a39602c913960400191505060405180910390fd5b506000908152606760205260409020546001600160a01b031690565b61019f5460ff1615610bb6576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b610bc082826116e9565b5050565b609e5490565b61019f5460ff1615610c16576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b610c21838383611811565b505050565b6000610c3183610ff2565b8210610c6e5760405162461bcd60e51b815260040180806020018281038252602b815260200180612880602b913960400191505060405180910390fd5b6001600160a01b0383166000908152609c60205260409020805483908110610c9257fe5b9060005260206000200154905092915050565b610cb5610cb0611868565b610dab565b610cf05760405162461bcd60e51b81526004018080602001828103825260308152602001806128dd6030913960400191505060405180910390fd5b61019f5460ff16610d3f576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b61019f805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610d73611868565b604080516001600160a01b039092168252519081900360200190a1565b610c218383836040518060200160405280600081525061135f565b6000610dbf61016c8363ffffffff61186c16565b92915050565b600054610100900460ff1680610dde5750610dde6118d3565b80610dec575060005460ff16155b610e275760405162461bcd60e51b815260040180806020018281038252602e815260200180612ab3602e913960400191505060405180910390fd5b600054610100900460ff16158015610e52576000805460ff1961ff0019909116610100171660011790555b610e5a6118d9565b610e6357600080fd5b8251610e769060d29060208601906127c7565b508151610e8a9060d39060208501906127c7565b50610e9b635b5e139f60e01b6118f0565b8015610c21576000805461ff0019169055505050565b6000610ebb610bc4565b8210610ef85760405162461bcd60e51b815260040180806020018281038252602c815260200180612b8b602c913960400191505060405180910390fd5b609e8281548110610f0557fe5b90600052602060002001549050919050565b6000610f29610f24611868565b61134b565b610f645760405162461bcd60e51b81526004018080602001828103825260308152602001806129e86030913960400191505060405180910390fd5b610f6e8484611974565b610f788383611991565b5060019392505050565b61019f5460ff1690565b6000818152606660205260408120546001600160a01b031680610dbf5760405162461bcd60e51b81526004018080602001828103825260298152602001806129bf6029913960400191505060405180910390fd5b610ff0610feb611868565b6119f4565b565b60006001600160a01b0382166110395760405162461bcd60e51b815260040180806020018281038252602a815260200180612995602a913960400191505060405180910390fd5b6001600160a01b0382166000908152606860205260409020610dbf90611a3d565b600054610100900460ff168061107357506110736118d3565b80611081575060005460ff16155b6110bc5760405162461bcd60e51b815260040180806020018281038252602e815260200180612ab3602e913960400191505060405180910390fd5b600054610100900460ff161580156110e7576000805460ff1961ff0019909116610100171660011790555b6110ef6118d9565b6110f857600080fd5b61110863780e9d6360e01b6118f0565b801561111a576000805461ff00191690555b50565b611128610cb0611868565b6111635760405162461bcd60e51b81526004018080602001828103825260308152602001806128dd6030913960400191505060405180910390fd5b61111a81611a41565b611177610cb0611868565b6111b25760405162461bcd60e51b81526004018080602001828103825260308152602001806128dd6030913960400191505060405180910390fd5b61019f5460ff16156111fe576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b61019f805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d73611868565b60d38054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610afd5780601f10610ad257610100808354040283529160200191610afd565b6112a1610f24611868565b6112dc5760405162461bcd60e51b81526004018080602001828103825260308152602001806129e86030913960400191505060405180910390fd5b61111a81611a8a565b610ff06112f0611868565b611ad3565b61019f5460ff1615611341576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b610bc08282611b1c565b6000610dbf6101078363ffffffff61186c16565b61136a848484610bca565b61137684848484611c21565b6113b15760405162461bcd60e51b81526004018080602001828103825260328152602001806128ab6032913960400191505060405180910390fd5b50505050565b600054610100900460ff16806113d057506113d06118d3565b806113de575060005460ff16155b6114195760405162461bcd60e51b815260040180806020018281038252602e815260200180612ab3602e913960400191505060405180910390fd5b600054610100900460ff16158015611444576000805460ff1961ff0019909116610100171660011790555b61144c6118d9565b61145557600080fd5b61145e82611d79565b8015610bc0576000805461ff00191690555050565b606061147e826116cc565b6114b95760405162461bcd60e51b815260040180806020018281038252602f815260200180612b0a602f913960400191505060405180910390fd5b600082815260d4602090815260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452909183018282801561154c5780601f106115215761010080835404028352916020019161154c565b820191906000526020600020905b81548152906001019060200180831161152f57829003601f168201915b50505050509050919050565b600054610100900460ff168061157157506115716118d3565b8061157f575060005460ff16155b6115ba5760405162461bcd60e51b815260040180806020018281038252602e815260200180612ab3602e913960400191505060405180910390fd5b600054610100900460ff161580156115e5576000805460ff1961ff0019909116610100171660011790555b6115ed611e2f565b6115f561105a565b6115ff8585610dc5565b61160830611ed4565b61161130611ad3565b61161a306113b7565b611623306119f4565b60005b83518110156116535761164b84828151811061163e57fe5b6020026020010151611a8a565b600101611626565b5060005b82518110156116845761167c83828151811061166f57fe5b6020026020010151611a41565b600101611657565b508015611697576000805461ff00191690555b5050505050565b6001600160a01b03918216600090815260696020908152604080832093909416825291909152205460ff1690565b6000908152606660205260409020546001600160a01b0316151590565b60006116f482610f8c565b9050806001600160a01b0316836001600160a01b031614156117475760405162461bcd60e51b8152600401808060200182810382526021815260200180612b396021913960400191505060405180910390fd5b806001600160a01b0316611759611868565b6001600160a01b0316148061177a575061177a81611775611868565b61169e565b6117b55760405162461bcd60e51b815260040180806020018281038252603881526020018061295d6038913960400191505060405180910390fd5b60008281526067602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b61182261181c611868565b82611f8c565b61185d5760405162461bcd60e51b8152600401808060200182810382526031815260200180612b5a6031913960400191505060405180910390fd5b610c21838383612028565b3390565b60006001600160a01b0382166118b35760405162461bcd60e51b8152600401808060200182810382526022815260200180612a916022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b303b1590565b60006118eb6380ac58cd60e01b610a52565b905090565b6001600160e01b0319808216141561194f576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152603360205260409020805460ff19166001179055565b61197e8282612047565b6119888282612178565b610bc0816121b6565b61199a826116cc565b6119d55760405162461bcd60e51b815260040180806020018281038252602c815260200180612a65602c913960400191505060405180910390fd5b600082815260d4602090815260409091208251610c21928401906127c7565b611a0661016c8263ffffffff6121fa16565b6040516001600160a01b038216907fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90600090a250565b5490565b611a5361016c8263ffffffff61226116565b6040516001600160a01b038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b611a9c6101078263ffffffff61226116565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b611ae56101078263ffffffff6121fa16565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b611b24611868565b6001600160a01b0316826001600160a01b03161415611b8a576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060696000611b97611868565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155611bdb611868565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b6000611c35846001600160a01b03166122e2565b611c4157506001611d71565b6000846001600160a01b031663150b7a02611c5a611868565b8887876040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611cdf578181015183820152602001611cc7565b50505050905090810190601f168015611d0c5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015611d2e57600080fd5b505af1158015611d42573d6000803e3d6000fd5b505050506040513d6020811015611d5857600080fd5b50516001600160e01b031916630a85bd0160e11b149150505b949350505050565b600054610100900460ff1680611d925750611d926118d3565b80611da0575060005460ff16155b611ddb5760405162461bcd60e51b815260040180806020018281038252602e815260200180612ab3602e913960400191505060405180910390fd5b600054610100900460ff16158015611e06576000805460ff1961ff0019909116610100171660011790555b611e0f826122e8565b61019f805460ff191690558015610bc0576000805461ff00191690555050565b600054610100900460ff1680611e485750611e486118d3565b80611e56575060005460ff16155b611e915760405162461bcd60e51b815260040180806020018281038252602e815260200180612ab3602e913960400191505060405180910390fd5b600054610100900460ff16158015611ebc576000805460ff1961ff0019909116610100171660011790555b611ec461238b565b6111086380ac58cd60e01b6118f0565b600054610100900460ff1680611eed5750611eed6118d3565b80611efb575060005460ff16155b611f365760405162461bcd60e51b815260040180806020018281038252602e815260200180612ab3602e913960400191505060405180910390fd5b600054610100900460ff16158015611f61576000805460ff1961ff0019909116610100171660011790555b611f696118d9565b611f7257600080fd5b611f7a612428565b611f8357600080fd5b61145e8261243a565b6000611f97826116cc565b611fd25760405162461bcd60e51b815260040180806020018281038252602c815260200180612931602c913960400191505060405180910390fd5b6000611fdd83610f8c565b9050806001600160a01b0316846001600160a01b031614806120185750836001600160a01b031661200d84610b08565b6001600160a01b0316145b80611d715750611d71818561169e565b6120338383836124dd565b61203d8382612621565b610c218282612178565b6001600160a01b0382166120a2576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b6120ab816116cc565b156120fd576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b600081815260666020908152604080832080546001600160a01b0319166001600160a01b03871690811790915583526068909152902061213c9061270f565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160a01b039091166000908152609c602081815260408084208054868652609d84529185208290559282526001810183559183529091200155565b609e80546000838152609f60205260408120829055600182018355919091527fcfe2a20ff701a1f3e14f63bd70d6c6bc6fba8172ec6d5a505cdab3927c0a9de60155565b612204828261186c565b61223f5760405162461bcd60e51b8152600401808060200182810382526021815260200180612a186021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b61226b828261186c565b156122bd576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b3b151590565b600054610100900460ff168061230157506123016118d3565b8061230f575060005460ff16155b61234a5760405162461bcd60e51b815260040180806020018281038252602e815260200180612ab3602e913960400191505060405180910390fd5b600054610100900460ff16158015612375576000805460ff1961ff0019909116610100171660011790555b61237e82610dab565b61145e5761145e82611a41565b600054610100900460ff16806123a457506123a46118d3565b806123b2575060005460ff16155b6123ed5760405162461bcd60e51b815260040180806020018281038252602e815260200180612ab3602e913960400191505060405180910390fd5b600054610100900460ff16158015612418576000805460ff1961ff0019909116610100171660011790555b6111086301ffc9a760e01b6118f0565b60006118eb635b5e139f60e01b610a52565b600054610100900460ff168061245357506124536118d3565b80612461575060005460ff16155b61249c5760405162461bcd60e51b815260040180806020018281038252602e815260200180612ab3602e913960400191505060405180910390fd5b600054610100900460ff161580156124c7576000805460ff1961ff0019909116610100171660011790555b6124d08261134b565b61145e5761145e82611a8a565b826001600160a01b03166124f082610f8c565b6001600160a01b0316146125355760405162461bcd60e51b8152600401808060200182810382526029815260200180612ae16029913960400191505060405180910390fd5b6001600160a01b03821661257a5760405162461bcd60e51b815260040180806020018281038252602481526020018061290d6024913960400191505060405180910390fd5b61258381612718565b6001600160a01b03831660009081526068602052604090206125a490612753565b6001600160a01b03821660009081526068602052604090206125c59061270f565b60008181526066602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166000908152609c602052604081205461264b90600163ffffffff61276a16565b6000838152609d60205260409020549091508082146126e6576001600160a01b0384166000908152609c6020526040812080548490811061268857fe5b9060005260206000200154905080609c6000876001600160a01b03166001600160a01b0316815260200190815260200160002083815481106126c657fe5b6000918252602080832090910192909255918252609d9052604090208190555b6001600160a01b0384166000908152609c60205260409020805490611697906000198301612845565b80546001019055565b6000818152606760205260409020546001600160a01b03161561111a57600090815260676020526040902080546001600160a01b0319169055565b805461276690600163ffffffff61276a16565b9055565b6000828211156127c1576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061280857805160ff1916838001178555612835565b82800160010185558215612835579182015b8281111561283557825182559160200191906001019061281a565b50612841929150612865565b5090565b815481835581811115610c2157600083815260209020610c219181019083015b610b0591905b80821115612841576000815560010161286b56fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572506175736572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652050617573657220726f6c654552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a265627a7a72315820ec918cd57d30aeaa7c52348949aacda3793d1dd796ca78cfebcae3dd472262e664736f6c634300050b0032",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106101da5760003560e01c80636ef8d66d1161010457806398650275116100a2578063c4d66de811610071578063c4d66de8146107b4578063c87b56dd146107da578063d94cc0e0146107f7578063e985e9c514610a24576101da565b80639865027514610694578063a22cb4651461069c578063aa271e1a146106ca578063b88d4fde146106f0576101da565b806382dc1ec4116100de57806382dc1ec4146106385780638456cb591461065e57806395d89b4114610666578063983b2d561461066e576101da565b80636ef8d66d1461060257806370a082311461060a5780638129fc1c14610630576101da565b80633f4ba83a1161017c5780634f6ccce71161014b5780634f6ccce71461050757806350bb4e7f146105245780635c975abb146105dd5780636352211e146105e5576101da565b80633f4ba83a1461037a57806342842e0e1461038257806346fbf68e146103b85780634cd88b76146103de576101da565b8063095ea7b3116101b8578063095ea7b3146102d057806318160ddd146102fe57806323b872dd146103185780632f745c591461034e576101da565b806301ffc9a7146101df57806306fdde031461021a578063081812fc14610297575b600080fd5b610206600480360360208110156101f557600080fd5b50356001600160e01b031916610a52565b604080519115158252519081900360200190f35b610222610a71565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561025c578181015183820152602001610244565b50505050905090810190601f1680156102895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102b4600480360360208110156102ad57600080fd5b5035610b08565b604080516001600160a01b039092168252519081900360200190f35b6102fc600480360360408110156102e657600080fd5b506001600160a01b038135169060200135610b6a565b005b610306610bc4565b60408051918252519081900360200190f35b6102fc6004803603606081101561032e57600080fd5b506001600160a01b03813581169160208101359091169060400135610bca565b6103066004803603604081101561036457600080fd5b506001600160a01b038135169060200135610c26565b6102fc610ca5565b6102fc6004803603606081101561039857600080fd5b506001600160a01b03813581169160208101359091169060400135610d90565b610206600480360360208110156103ce57600080fd5b50356001600160a01b0316610dab565b6102fc600480360360408110156103f457600080fd5b810190602081018135600160201b81111561040e57600080fd5b82018360208201111561042057600080fd5b803590602001918460018302840111600160201b8311171561044157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561049357600080fd5b8201836020820111156104a557600080fd5b803590602001918460018302840111600160201b831117156104c657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610dc5945050505050565b6103066004803603602081101561051d57600080fd5b5035610eb1565b6102066004803603606081101561053a57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b81111561056957600080fd5b82018360208201111561057b57600080fd5b803590602001918460018302840111600160201b8311171561059c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610f17945050505050565b610206610f82565b6102b4600480360360208110156105fb57600080fd5b5035610f8c565b6102fc610fe0565b6103066004803603602081101561062057600080fd5b50356001600160a01b0316610ff2565b6102fc61105a565b6102fc6004803603602081101561064e57600080fd5b50356001600160a01b031661111d565b6102fc61116c565b610222611235565b6102fc6004803603602081101561068457600080fd5b50356001600160a01b0316611296565b6102fc6112e5565b6102fc600480360360408110156106b257600080fd5b506001600160a01b03813516906020013515156112f5565b610206600480360360208110156106e057600080fd5b50356001600160a01b031661134b565b6102fc6004803603608081101561070657600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b81111561074057600080fd5b82018360208201111561075257600080fd5b803590602001918460018302840111600160201b8311171561077357600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061135f945050505050565b6102fc600480360360208110156107ca57600080fd5b50356001600160a01b03166113b7565b610222600480360360208110156107f057600080fd5b5035611473565b6102fc6004803603608081101561080d57600080fd5b810190602081018135600160201b81111561082757600080fd5b82018360208201111561083957600080fd5b803590602001918460018302840111600160201b8311171561085a57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156108ac57600080fd5b8201836020820111156108be57600080fd5b803590602001918460018302840111600160201b831117156108df57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561093157600080fd5b82018360208201111561094357600080fd5b803590602001918460208302840111600160201b8311171561096457600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156109b357600080fd5b8201836020820111156109c557600080fd5b803590602001918460208302840111600160201b831117156109e657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611558945050505050565b61020660048036036040811015610a3a57600080fd5b506001600160a01b038135811691602001351661169e565b6001600160e01b03191660009081526033602052604090205460ff1690565b60d28054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610afd5780601f10610ad257610100808354040283529160200191610afd565b820191906000526020600020905b815481529060010190602001808311610ae057829003601f168201915b505050505090505b90565b6000610b13826116cc565b610b4e5760405162461bcd60e51b815260040180806020018281038252602c815260200180612a39602c913960400191505060405180910390fd5b506000908152606760205260409020546001600160a01b031690565b61019f5460ff1615610bb6576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b610bc082826116e9565b5050565b609e5490565b61019f5460ff1615610c16576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b610c21838383611811565b505050565b6000610c3183610ff2565b8210610c6e5760405162461bcd60e51b815260040180806020018281038252602b815260200180612880602b913960400191505060405180910390fd5b6001600160a01b0383166000908152609c60205260409020805483908110610c9257fe5b9060005260206000200154905092915050565b610cb5610cb0611868565b610dab565b610cf05760405162461bcd60e51b81526004018080602001828103825260308152602001806128dd6030913960400191505060405180910390fd5b61019f5460ff16610d3f576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b61019f805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610d73611868565b604080516001600160a01b039092168252519081900360200190a1565b610c218383836040518060200160405280600081525061135f565b6000610dbf61016c8363ffffffff61186c16565b92915050565b600054610100900460ff1680610dde5750610dde6118d3565b80610dec575060005460ff16155b610e275760405162461bcd60e51b815260040180806020018281038252602e815260200180612ab3602e913960400191505060405180910390fd5b600054610100900460ff16158015610e52576000805460ff1961ff0019909116610100171660011790555b610e5a6118d9565b610e6357600080fd5b8251610e769060d29060208601906127c7565b508151610e8a9060d39060208501906127c7565b50610e9b635b5e139f60e01b6118f0565b8015610c21576000805461ff0019169055505050565b6000610ebb610bc4565b8210610ef85760405162461bcd60e51b815260040180806020018281038252602c815260200180612b8b602c913960400191505060405180910390fd5b609e8281548110610f0557fe5b90600052602060002001549050919050565b6000610f29610f24611868565b61134b565b610f645760405162461bcd60e51b81526004018080602001828103825260308152602001806129e86030913960400191505060405180910390fd5b610f6e8484611974565b610f788383611991565b5060019392505050565b61019f5460ff1690565b6000818152606660205260408120546001600160a01b031680610dbf5760405162461bcd60e51b81526004018080602001828103825260298152602001806129bf6029913960400191505060405180910390fd5b610ff0610feb611868565b6119f4565b565b60006001600160a01b0382166110395760405162461bcd60e51b815260040180806020018281038252602a815260200180612995602a913960400191505060405180910390fd5b6001600160a01b0382166000908152606860205260409020610dbf90611a3d565b600054610100900460ff168061107357506110736118d3565b80611081575060005460ff16155b6110bc5760405162461bcd60e51b815260040180806020018281038252602e815260200180612ab3602e913960400191505060405180910390fd5b600054610100900460ff161580156110e7576000805460ff1961ff0019909116610100171660011790555b6110ef6118d9565b6110f857600080fd5b61110863780e9d6360e01b6118f0565b801561111a576000805461ff00191690555b50565b611128610cb0611868565b6111635760405162461bcd60e51b81526004018080602001828103825260308152602001806128dd6030913960400191505060405180910390fd5b61111a81611a41565b611177610cb0611868565b6111b25760405162461bcd60e51b81526004018080602001828103825260308152602001806128dd6030913960400191505060405180910390fd5b61019f5460ff16156111fe576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b61019f805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d73611868565b60d38054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610afd5780601f10610ad257610100808354040283529160200191610afd565b6112a1610f24611868565b6112dc5760405162461bcd60e51b81526004018080602001828103825260308152602001806129e86030913960400191505060405180910390fd5b61111a81611a8a565b610ff06112f0611868565b611ad3565b61019f5460ff1615611341576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b610bc08282611b1c565b6000610dbf6101078363ffffffff61186c16565b61136a848484610bca565b61137684848484611c21565b6113b15760405162461bcd60e51b81526004018080602001828103825260328152602001806128ab6032913960400191505060405180910390fd5b50505050565b600054610100900460ff16806113d057506113d06118d3565b806113de575060005460ff16155b6114195760405162461bcd60e51b815260040180806020018281038252602e815260200180612ab3602e913960400191505060405180910390fd5b600054610100900460ff16158015611444576000805460ff1961ff0019909116610100171660011790555b61144c6118d9565b61145557600080fd5b61145e82611d79565b8015610bc0576000805461ff00191690555050565b606061147e826116cc565b6114b95760405162461bcd60e51b815260040180806020018281038252602f815260200180612b0a602f913960400191505060405180910390fd5b600082815260d4602090815260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452909183018282801561154c5780601f106115215761010080835404028352916020019161154c565b820191906000526020600020905b81548152906001019060200180831161152f57829003601f168201915b50505050509050919050565b600054610100900460ff168061157157506115716118d3565b8061157f575060005460ff16155b6115ba5760405162461bcd60e51b815260040180806020018281038252602e815260200180612ab3602e913960400191505060405180910390fd5b600054610100900460ff161580156115e5576000805460ff1961ff0019909116610100171660011790555b6115ed611e2f565b6115f561105a565b6115ff8585610dc5565b61160830611ed4565b61161130611ad3565b61161a306113b7565b611623306119f4565b60005b83518110156116535761164b84828151811061163e57fe5b6020026020010151611a8a565b600101611626565b5060005b82518110156116845761167c83828151811061166f57fe5b6020026020010151611a41565b600101611657565b508015611697576000805461ff00191690555b5050505050565b6001600160a01b03918216600090815260696020908152604080832093909416825291909152205460ff1690565b6000908152606660205260409020546001600160a01b0316151590565b60006116f482610f8c565b9050806001600160a01b0316836001600160a01b031614156117475760405162461bcd60e51b8152600401808060200182810382526021815260200180612b396021913960400191505060405180910390fd5b806001600160a01b0316611759611868565b6001600160a01b0316148061177a575061177a81611775611868565b61169e565b6117b55760405162461bcd60e51b815260040180806020018281038252603881526020018061295d6038913960400191505060405180910390fd5b60008281526067602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b61182261181c611868565b82611f8c565b61185d5760405162461bcd60e51b8152600401808060200182810382526031815260200180612b5a6031913960400191505060405180910390fd5b610c21838383612028565b3390565b60006001600160a01b0382166118b35760405162461bcd60e51b8152600401808060200182810382526022815260200180612a916022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b303b1590565b60006118eb6380ac58cd60e01b610a52565b905090565b6001600160e01b0319808216141561194f576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152603360205260409020805460ff19166001179055565b61197e8282612047565b6119888282612178565b610bc0816121b6565b61199a826116cc565b6119d55760405162461bcd60e51b815260040180806020018281038252602c815260200180612a65602c913960400191505060405180910390fd5b600082815260d4602090815260409091208251610c21928401906127c7565b611a0661016c8263ffffffff6121fa16565b6040516001600160a01b038216907fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90600090a250565b5490565b611a5361016c8263ffffffff61226116565b6040516001600160a01b038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b611a9c6101078263ffffffff61226116565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b611ae56101078263ffffffff6121fa16565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b611b24611868565b6001600160a01b0316826001600160a01b03161415611b8a576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060696000611b97611868565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155611bdb611868565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b6000611c35846001600160a01b03166122e2565b611c4157506001611d71565b6000846001600160a01b031663150b7a02611c5a611868565b8887876040518563ffffffff1660e01b815260040180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611cdf578181015183820152602001611cc7565b50505050905090810190601f168015611d0c5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015611d2e57600080fd5b505af1158015611d42573d6000803e3d6000fd5b505050506040513d6020811015611d5857600080fd5b50516001600160e01b031916630a85bd0160e11b149150505b949350505050565b600054610100900460ff1680611d925750611d926118d3565b80611da0575060005460ff16155b611ddb5760405162461bcd60e51b815260040180806020018281038252602e815260200180612ab3602e913960400191505060405180910390fd5b600054610100900460ff16158015611e06576000805460ff1961ff0019909116610100171660011790555b611e0f826122e8565b61019f805460ff191690558015610bc0576000805461ff00191690555050565b600054610100900460ff1680611e485750611e486118d3565b80611e56575060005460ff16155b611e915760405162461bcd60e51b815260040180806020018281038252602e815260200180612ab3602e913960400191505060405180910390fd5b600054610100900460ff16158015611ebc576000805460ff1961ff0019909116610100171660011790555b611ec461238b565b6111086380ac58cd60e01b6118f0565b600054610100900460ff1680611eed5750611eed6118d3565b80611efb575060005460ff16155b611f365760405162461bcd60e51b815260040180806020018281038252602e815260200180612ab3602e913960400191505060405180910390fd5b600054610100900460ff16158015611f61576000805460ff1961ff0019909116610100171660011790555b611f696118d9565b611f7257600080fd5b611f7a612428565b611f8357600080fd5b61145e8261243a565b6000611f97826116cc565b611fd25760405162461bcd60e51b815260040180806020018281038252602c815260200180612931602c913960400191505060405180910390fd5b6000611fdd83610f8c565b9050806001600160a01b0316846001600160a01b031614806120185750836001600160a01b031661200d84610b08565b6001600160a01b0316145b80611d715750611d71818561169e565b6120338383836124dd565b61203d8382612621565b610c218282612178565b6001600160a01b0382166120a2576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b6120ab816116cc565b156120fd576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b600081815260666020908152604080832080546001600160a01b0319166001600160a01b03871690811790915583526068909152902061213c9061270f565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160a01b039091166000908152609c602081815260408084208054868652609d84529185208290559282526001810183559183529091200155565b609e80546000838152609f60205260408120829055600182018355919091527fcfe2a20ff701a1f3e14f63bd70d6c6bc6fba8172ec6d5a505cdab3927c0a9de60155565b612204828261186c565b61223f5760405162461bcd60e51b8152600401808060200182810382526021815260200180612a186021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b61226b828261186c565b156122bd576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b3b151590565b600054610100900460ff168061230157506123016118d3565b8061230f575060005460ff16155b61234a5760405162461bcd60e51b815260040180806020018281038252602e815260200180612ab3602e913960400191505060405180910390fd5b600054610100900460ff16158015612375576000805460ff1961ff0019909116610100171660011790555b61237e82610dab565b61145e5761145e82611a41565b600054610100900460ff16806123a457506123a46118d3565b806123b2575060005460ff16155b6123ed5760405162461bcd60e51b815260040180806020018281038252602e815260200180612ab3602e913960400191505060405180910390fd5b600054610100900460ff16158015612418576000805460ff1961ff0019909116610100171660011790555b6111086301ffc9a760e01b6118f0565b60006118eb635b5e139f60e01b610a52565b600054610100900460ff168061245357506124536118d3565b80612461575060005460ff16155b61249c5760405162461bcd60e51b815260040180806020018281038252602e815260200180612ab3602e913960400191505060405180910390fd5b600054610100900460ff161580156124c7576000805460ff1961ff0019909116610100171660011790555b6124d08261134b565b61145e5761145e82611a8a565b826001600160a01b03166124f082610f8c565b6001600160a01b0316146125355760405162461bcd60e51b8152600401808060200182810382526029815260200180612ae16029913960400191505060405180910390fd5b6001600160a01b03821661257a5760405162461bcd60e51b815260040180806020018281038252602481526020018061290d6024913960400191505060405180910390fd5b61258381612718565b6001600160a01b03831660009081526068602052604090206125a490612753565b6001600160a01b03821660009081526068602052604090206125c59061270f565b60008181526066602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166000908152609c602052604081205461264b90600163ffffffff61276a16565b6000838152609d60205260409020549091508082146126e6576001600160a01b0384166000908152609c6020526040812080548490811061268857fe5b9060005260206000200154905080609c6000876001600160a01b03166001600160a01b0316815260200190815260200160002083815481106126c657fe5b6000918252602080832090910192909255918252609d9052604090208190555b6001600160a01b0384166000908152609c60205260409020805490611697906000198301612845565b80546001019055565b6000818152606760205260409020546001600160a01b03161561111a57600090815260676020526040902080546001600160a01b0319169055565b805461276690600163ffffffff61276a16565b9055565b6000828211156127c1576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061280857805160ff1916838001178555612835565b82800160010185558215612835579182015b8281111561283557825182559160200191906001019061281a565b50612841929150612865565b5090565b815481835581811115610c2157600083815260209020610c219181019083015b610b0591905b80821115612841576000815560010161286b56fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572506175736572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652050617573657220726f6c654552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473a265627a7a72315820ec918cd57d30aeaa7c52348949aacda3793d1dd796ca78cfebcae3dd472262e664736f6c634300050b0032",
    "sourceMap": "1177:1311:0:-;;;;;;;;;",
    "deployedSourceMap": "1177:1311:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1177:1311:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1058:131:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1058:131:6;-1:-1:-1;;;;;;1058:131:6;;:::i;:::-;;;;;;;;;;;;;;;;;;1485:83:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1485:83:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4587:200:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4587:200:10;;:::i;:::-;;;;-1:-1:-1;;;;;4587:200:10;;;;;;;;;;;;;;518:110:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;518:110:14;;;;;;;;:::i;:::-;;2504:94:11;;;:::i;:::-;;;;;;;;;;;;;;;;769:140:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;769:140:14;;;;;;;;;;;;;;;;;:::i;2122:229:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2122:229:11;;;;;;;;:::i;2090:117:8:-;;;:::i;7153:132:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7153:132:10;;;;;;;;;;;;;;;;;:::i;693:107:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;693:107:4;-1:-1:-1;;;;;693:107:4;;:::i;921:321:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;921:321:12;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;921:321:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;921:321:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;921:321:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;921:321:12;;;;;;;;-1:-1:-1;921:321:12;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;921:321:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;921:321:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;921:321:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;921:321:12;;-1:-1:-1;921:321:12;;-1:-1:-1;;;;;921:321:12:i;2936:196:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2936:196:11;;:::i;892:209:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;892:209:13;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;892:209:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;892:209:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;892:209:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;892:209:13;;-1:-1:-1;892:209:13;;-1:-1:-1;;;;;892:209:13:i;1328:76:8:-;;;:::i;3243:223:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3243:223:10;;:::i;902:77:4:-;;;:::i;2817:207:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2817:207:10;-1:-1:-1;;;;;2817:207:10;;:::i;1366:242:11:-;;;:::i;806:90:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;806:90:4;-1:-1:-1;;;;;806:90:4;;:::i;1885:115:8:-;;;:::i;1677:87:12:-;;;:::i;806:90:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;806:90:3;-1:-1:-1;;;;;806:90:3;;:::i;902:77::-;;;:::i;634:129:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;634:129:14;;;;;;;;;;:::i;693:107:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;693:107:3;-1:-1:-1;;;;;693:107:3;;:::i;7992:265:10:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;7992:265:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;7992:265:10;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7992:265:10;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7992:265:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7992:265:10;;-1:-1:-1;7992:265:10;;-1:-1:-1;;;;;7992:265:10:i;366:146:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;366:146:14;-1:-1:-1;;;;;366:146:14;;:::i;1964:202:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1964:202:12;;:::i;1580:905:0:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1580:905:0;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1580:905:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1580:905:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1580:905:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1580:905:0;;;;;;;;-1:-1:-1;1580:905:0;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;1580:905:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1580:905:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1580:905:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1580:905:0;;;;;;;;-1:-1:-1;1580:905:0;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;1580:905:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1580:905:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1580:905:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1580:905:0;;;;;;;;-1:-1:-1;1580:905:0;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;1580:905:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1580:905:0;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;1580:905:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1580:905:0;;-1:-1:-1;1580:905:0;;-1:-1:-1;;;;;1580:905:0:i;5651:145:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5651:145:10;;;;;;;;;;:::i;1058:131:6:-;-1:-1:-1;;;;;;1149:33:6;1126:4;1149:33;;;:20;:33;;;;;;;;;1058:131::o;1485:83:12:-;1556:5;1549:12;;;;;;;;-1:-1:-1;;1549:12:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1524:13;;1549:12;;1556:5;;1549:12;;1556:5;1549:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1485:83;;:::o;4587:200:10:-;4646:7;4673:16;4681:7;4673;:16::i;:::-;4665:73;;;;-1:-1:-1;;;4665:73:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4756:24:10;;;;:15;:24;;;;;;-1:-1:-1;;;;;4756:24:10;;4587:200::o;518:110:14:-;1557:7:8;;;;1556:8;1548:37;;;;;-1:-1:-1;;;1548:37:8;;;;;;;;;;;;-1:-1:-1;;;1548:37:8;;;;;;;;;;;;;;;595:26:14;609:2;613:7;595:13;:26::i;:::-;518:110;;:::o;2504:94:11:-;2574:10;:17;2504:94;:::o;769:140:14:-;1557:7:8;;;;1556:8;1548:37;;;;;-1:-1:-1;;;1548:37:8;;;;;;;;;;;;-1:-1:-1;;;1548:37:8;;;;;;;;;;;;;;;865::14;884:4;890:2;894:7;865:18;:37::i;:::-;769:140;;;:::o;2122:229:11:-;2202:7;2237:16;2247:5;2237:9;:16::i;:::-;2229:5;:24;2221:80;;;;-1:-1:-1;;;2221:80:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2318:19:11;;;;;;:12;:19;;;;;:26;;2338:5;;2318:26;;;;;;;;;;;;;;2311:33;;2122:229;;;;:::o;2090:117:8:-;594:22:4;603:12;:10;:12::i;:::-;594:8;:22::i;:::-;586:83;;;;-1:-1:-1;;;586:83:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1748:7:8;;;;1740:40;;;;;-1:-1:-1;;;1740:40:8;;;;;;;;;;;;-1:-1:-1;;;1740:40:8;;;;;;;;;;;;;;;2148:7;:15;;-1:-1:-1;;2148:15:8;;;2178:22;2187:12;:10;:12::i;:::-;2178:22;;;-1:-1:-1;;;;;2178:22:8;;;;;;;;;;;;;;2090:117::o;7153:132:10:-;7239:39;7256:4;7262:2;7266:7;7239:39;;;;;;;;;;;;:16;:39::i;693:107:4:-;749:4;772:21;:8;785:7;772:21;:12;:21;:::i;:::-;765:28;693:107;-1:-1:-1;;693:107:4:o;921:321:12:-;1024:12:20;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:20;;;;;1225:18;1213:4;1225:18;;;1170:80;1020:28:12;:26;:28::i;:::-;1012:37;;;;;;1060:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;1082:16:12;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;1186:49:12;-1:-1:-1;;;1186:18:12;:49::i;:::-;1268:14:20;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:20;;;921:321:12;;;:::o;2936:196:11:-;2994:7;3029:13;:11;:13::i;:::-;3021:5;:21;3013:78;;;;-1:-1:-1;;;3013:78:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3108:10;3119:5;3108:17;;;;;;;;;;;;;;;;3101:24;;2936:196;;;:::o;892:209:13:-;998:4;594:22:3;603:12;:10;:12::i;:::-;594:8;:22::i;:::-;586:83;;;;-1:-1:-1;;;586:83:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1014:18:13;1020:2;1024:7;1014:5;:18::i;:::-;1042:31;1055:7;1064:8;1042:12;:31::i;:::-;-1:-1:-1;1090:4:13;892:209;;;;;:::o;1328:76:8:-;1390:7;;;;1328:76;:::o;3243:223:10:-;3298:7;3333:20;;;:11;:20;;;;;;-1:-1:-1;;;;;3333:20:10;3371:19;3363:73;;;;-1:-1:-1;;;3363:73:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;902:77:4;945:27;959:12;:10;:12::i;:::-;945:13;:27::i;:::-;902:77::o;2817:207:10:-;2872:7;-1:-1:-1;;;;;2899:19:10;;2891:74;;;;-1:-1:-1;;;2891:74:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2983:24:10;;;;;;:17;:24;;;;;:34;;:32;:34::i;1366:242:11:-;1024:12:20;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:20;;;;;1225:18;1213:4;1225:18;;;1170:80;1425:28:11;:26;:28::i;:::-;1417:37;;;;;;1550:51;-1:-1:-1;;;1550:18:11;:51::i;:::-;1268:14:20;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:20;;;1264:55;1366:242:11;:::o;806:90:4:-;594:22;603:12;:10;:12::i;594:22::-;586:83;;;;-1:-1:-1;;;586:83:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;870:19;881:7;870:10;:19::i;1885:115:8:-;594:22:4;603:12;:10;:12::i;594:22::-;586:83;;;;-1:-1:-1;;;586:83:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1557:7:8;;;;1556:8;1548:37;;;;;-1:-1:-1;;;1548:37:8;;;;;;;;;;;;-1:-1:-1;;;1548:37:8;;;;;;;;;;;;;;;1944:7;:14;;-1:-1:-1;;1944:14:8;1954:4;1944:14;;;1973:20;1980:12;:10;:12::i;1677:87:12:-;1750:7;1743:14;;;;;;;;-1:-1:-1;;1743:14:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:13;;1743:14;;1750:7;;1743:14;;1750:7;1743:14;;;;;;;;;;;;;;;;;;;;;;;;806:90:3;594:22;603:12;:10;:12::i;594:22::-;586:83;;;;-1:-1:-1;;;586:83:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;870:19;881:7;870:10;:19::i;902:77::-;945:27;959:12;:10;:12::i;:::-;945:13;:27::i;634:129:14:-;1557:7:8;;;;1556:8;1548:37;;;;;-1:-1:-1;;;1548:37:8;;;;;;;;;;;;-1:-1:-1;;;1548:37:8;;;;;;;;;;;;;;;719::14;743:2;747:8;719:23;:37::i;693:107:3:-;749:4;772:21;:8;785:7;772:21;:12;:21;:::i;7992:265:10:-;8098:31;8111:4;8117:2;8121:7;8098:12;:31::i;:::-;8147:48;8170:4;8176:2;8180:7;8189:5;8147:22;:48::i;:::-;8139:111;;;;-1:-1:-1;;;8139:111:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7992:265;;;;:::o;366:146:14:-;1024:12:20;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:20;;;;;1225:18;1213:4;1225:18;;;1170:80;439:28:14;:26;:28::i;:::-;431:37;;;;;;478:27;498:6;478:19;:27::i;:::-;1268:14:20;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:20;;;366:146:14;;:::o;1964:202:12:-;2022:13;2055:16;2063:7;2055;:16::i;:::-;2047:76;;;;-1:-1:-1;;;2047:76:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2140:19;;;;:10;:19;;;;;;;;;2133:26;;;;;;-1:-1:-1;;2133:26:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2140:19;;2133:26;;2140:19;2133:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1964:202;;;:::o;1580:905:0:-;1024:12:20;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:20;;;;;1225:18;1213:4;1225:18;;;1170:80;1771:19:0;:17;:19::i;:::-;1800:29;:27;:29::i;:::-;1839:49;1865:9;1876:11;1839:25;:49::i;:::-;1968:48;2010:4;1968:33;:48::i;:::-;2026:28;2048:4;2026:13;:28::i;:::-;2065:40;2099:4;2065:25;:40::i;:::-;2115:28;2137:4;2115:13;:28::i;:::-;2290:9;2285:92;2309:7;:14;2305:1;:18;2285:92;;;2344:22;2355:7;2363:1;2355:10;;;;;;;;;;;;;;2344;:22::i;:::-;2325:3;;2285:92;;;-1:-1:-1;2392:9:0;2387:92;2411:7;:14;2407:1;:18;2387:92;;;2446:22;2457:7;2465:1;2457:10;;;;;;;;;;;;;;2446;:22::i;:::-;2427:3;;2387:92;;;;1268:14:20;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:20;;;1264:55;1580:905:0;;;;;:::o;5651:145:10:-;-1:-1:-1;;;;;5754:25:10;;;5731:4;5754:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5651:145::o;8452:152::-;8509:4;8541:20;;;:11;:20;;;;;;-1:-1:-1;;;;;8541:20:10;8578:19;;;8452:152::o;3887:415::-;3950:13;3966:16;3974:7;3966;:16::i;:::-;3950:32;;4006:5;-1:-1:-1;;;;;4000:11:10;:2;-1:-1:-1;;;;;4000:11:10;;;3992:57;;;;-1:-1:-1;;;3992:57:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4084:5;-1:-1:-1;;;;;4068:21:10;:12;:10;:12::i;:::-;-1:-1:-1;;;;;4068:21:10;;:62;;;;4093:37;4110:5;4117:12;:10;:12::i;:::-;4093:16;:37::i;:::-;4060:152;;;;-1:-1:-1;;;4060:152:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4223:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;4223:29:10;-1:-1:-1;;;;;4223:29:10;;;;;;;;;4267:28;;4223:24;;4267:28;;;;;;;3887:415;;;:::o;6233:287::-;6375:41;6394:12;:10;:12::i;:::-;6408:7;6375:18;:41::i;:::-;6367:103;;;;-1:-1:-1;;;6367:103:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6481:32;6495:4;6501:2;6505:7;6481:13;:32::i;791:88:1:-;862:10;791:88;:::o;779:200:2:-;851:4;-1:-1:-1;;;;;875:21:2;;867:68;;;;-1:-1:-1;;;867:68:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:2;:11;:20;;;;;;;;;;;;;;;779:200::o;1409:467:20:-;1842:7;1830:20;1864:7;1409:467;:::o;2490:123:10:-;2544:4;2567:39;-1:-1:-1;;;2567:17:10;:39::i;:::-;2560:46;;2490:123;:::o;1583:190:6:-;-1:-1:-1;;;;;;1658:25:6;;;;;1650:66;;;;;-1:-1:-1;;;1650:66:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1726:33:6;;;;;:20;:33;;;;;:40;;-1:-1:-1;;1726:40:6;1762:4;1726:40;;;1583:190::o;4003:196:11:-;4066:24;4078:2;4082:7;4066:11;:24::i;:::-;4101:40;4129:2;4133:7;4101:27;:40::i;:::-;4152;4184:7;4152:31;:40::i;2405:192:12:-;2490:16;2498:7;2490;:16::i;:::-;2482:73;;;;-1:-1:-1;;;2482:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:19;;;;:10;:19;;;;;;;;:25;;;;;;;;:::i;1110:127:4:-;1169:24;:8;1185:7;1169:24;:15;:24;:::i;:::-;1208:22;;-1:-1:-1;;;;;1208:22:4;;;;;;;;1110:127;:::o;1063:112:5:-;1154:14;;1063:112::o;985:119:4:-;1041:21;:8;1054:7;1041:21;:12;:21;:::i;:::-;1077:20;;-1:-1:-1;;;;;1077:20:4;;;;;;;;985:119;:::o;::3:-;1041:21;:8;1054:7;1041:21;:12;:21;:::i;:::-;1077:20;;-1:-1:-1;;;;;1077:20:3;;;;;;;;985:119;:::o;1110:127::-;1169:24;:8;1185:7;1169:24;:15;:24;:::i;:::-;1208:22;;-1:-1:-1;;;;;1208:22:3;;;;;;;;1110:127;:::o;5080:249:10:-;5165:12;:10;:12::i;:::-;-1:-1:-1;;;;;5159:18:10;:2;-1:-1:-1;;;;;5159:18:10;;;5151:56;;;;;-1:-1:-1;;;5151:56:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;5257:8;5218:18;:32;5237:12;:10;:12::i;:::-;-1:-1:-1;;;;;5218:32:10;;;;;;;;;;;;;;;;;-1:-1:-1;5218:32:10;;;:36;;;;;;;;;;;;:47;;-1:-1:-1;;5218:47:10;;;;;;;;;;;5295:12;:10;:12::i;:::-;5280:42;;;;;;;;;;-1:-1:-1;;;;;5280:42:10;;;;;;;;;;;;;;5080:249;;:::o;12131:349::-;12252:4;12277:15;:2;-1:-1:-1;;;;;12277:13:10;;:15::i;:::-;12272:58;;-1:-1:-1;12315:4:10;12308:11;;12272:58;12340:13;12372:2;-1:-1:-1;;;;;12356:36:10;;12393:12;:10;:12::i;:::-;12407:4;12413:7;12422:5;12356:72;;;;;;;;;;;;;-1:-1:-1;;;;;12356:72:10;-1:-1:-1;;;;;12356:72:10;;;;;;-1:-1:-1;;;;;12356:72:10;-1:-1:-1;;;;;12356:72:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12356:72:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12356:72:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12356:72:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12356:72:10;-1:-1:-1;;;;;;12446:26:10;-1:-1:-1;;;12446:26:10;;-1:-1:-1;;12131:349:10;;;;;;;:::o;1106:127:8:-;1024:12:20;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:20;;;;;1225:18;1213:4;1225:18;;;1170:80;1171:29:8;1193:6;1171:21;:29::i;:::-;1211:7;:15;;-1:-1:-1;;1211:15:8;;;1264:55:20;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:20;;;1106:127:8;;:::o;2279:205:10:-;1024:12:20;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:20;;;;;1225:18;1213:4;1225:18;;;1170:80;2330:19:10;:17;:19::i;:::-;2437:40;-1:-1:-1;;;2437:18:10;:40::i;389:203:13:-;1024:12:20;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:20;;;;;1225:18;1213:4;1225:18;;;1170:80;462:28:13;:26;:28::i;:::-;454:37;;;;;;509:36;:34;:36::i;:::-;501:45;;;;;;556:29;578:6;556:21;:29::i;8965:329:10:-;9050:4;9074:16;9082:7;9074;:16::i;:::-;9066:73;;;;-1:-1:-1;;;9066:73:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9149:13;9165:16;9173:7;9165;:16::i;:::-;9149:32;;9210:5;-1:-1:-1;;;;;9199:16:10;:7;-1:-1:-1;;;;;9199:16:10;;:51;;;;9243:7;-1:-1:-1;;;;;9219:31:10;:20;9231:7;9219:11;:20::i;:::-;-1:-1:-1;;;;;9219:31:10;;9199:51;:87;;;;9254:32;9271:5;9278:7;9254:16;:32::i;3507:239:11:-;3592:38;3612:4;3618:2;3622:7;3592:19;:38::i;:::-;3641:47;3674:4;3680:7;3641:32;:47::i;:::-;3699:40;3727:2;3731:7;3699:27;:40::i;9539:327:10:-;-1:-1:-1;;;;;9610:16:10;;9602:61;;;;;-1:-1:-1;;;9602:61:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9682:16;9690:7;9682;:16::i;:::-;9681:17;9673:58;;;;;-1:-1:-1;;;9673:58:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;9742:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;9742:25:10;-1:-1:-1;;;;;9742:25:10;;;;;;;;9777:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;9826;;9851:7;;-1:-1:-1;;;;;9826:33:10;;;9843:1;;9826:33;;9843:1;;9826:33;9539:327;;:::o;5461:183:11:-;-1:-1:-1;;;;;5574:16:11;;;;;;;:12;:16;;;;;;;;:23;;5545:26;;;:17;:26;;;;;:52;;;5607:16;;;39:1:-1;23:18;;45:23;;5607:30:11;;;;;;;;5461:183::o;5839:161::-;5942:10;:17;;5915:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;5969:24:11;;;;;;;5839:161::o;510:180:2:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:2;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:2;;;510:180::o;260:175::-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:2;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:2;424:4;401:27;;;260:175::o;542:413:19:-;902:20;940:8;;;542:413::o;411:137:4:-;1024:12:20;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:20;;;;;1225:18;1213:4;1225:18;;;1170:80;481:16:4;490:6;481:8;:16::i;:::-;476:66;;513:18;524:6;513:10;:18::i;674:234:6:-;1024:12:20;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:20;;;;;1225:18;1213:4;1225:18;;;1170:80;861:40:6;-1:-1:-1;;;861:18:6;:40::i;1248:132:12:-;1302:4;1325:48;-1:-1:-1;;;1325:17:12;:48::i;411:137:3:-;1024:12:20;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:20;;;;;1225:18;1213:4;1225:18;;;1170:80;481:16:3;490:6;481:8;:16::i;:::-;476:66;;513:18;524:6;513:10;:18::i;11111:447:10:-;11224:4;-1:-1:-1;;;;;11204:24:10;:16;11212:7;11204;:16::i;:::-;-1:-1:-1;;;;;11204:24:10;;11196:78;;;;-1:-1:-1;;;11196:78:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11292:16:10;;11284:65;;;;-1:-1:-1;;;11284:65:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11360:23;11375:7;11360:14;:23::i;:::-;-1:-1:-1;;;;;11394:23:10;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;11439:21:10;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;11483:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;11483:25:10;-1:-1:-1;;;;;11483:25:10;;;;;;;;;11524:27;;11483:20;;11524:27;;;;;;;11111:447;;;:::o;6615:1128:11:-;-1:-1:-1;;;;;6902:18:11;;6877:22;6902:18;;;:12;:18;;;;;:25;:32;;6932:1;6902:32;:29;:32;:::i;:::-;6944:18;6965:26;;;:17;:26;;;;;;6877:57;;-1:-1:-1;7095:28:11;;;7091:323;;-1:-1:-1;;;;;7161:18:11;;7139:19;7161:18;;;:12;:18;;;;;:34;;7180:14;;7161:34;;;;;;;;;;;;;;7139:56;;7243:11;7210:12;:18;7223:4;-1:-1:-1;;;;;7210:18:11;-1:-1:-1;;;;;7210:18:11;;;;;;;;;;;;7229:10;7210:30;;;;;;;;;;;;;;;;;;;:44;;;;7326:30;;;:17;:30;;;;;:43;;;7091:323;-1:-1:-1;;;;;7500:18:11;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;7500:27:11;;;:::i;1181:89:5:-;1244:19;;1262:1;1244:19;;;1181:89::o;12642:171:10:-;12741:1;12705:24;;;:15;:24;;;;;;-1:-1:-1;;;;;12705:24:10;:38;12701:106;;12794:1;12759:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;12759:37:10;;;12642:171::o;1276:108:5:-;1356:14;;:21;;1375:1;1356:21;:18;:21;:::i;:::-;1339:38;;1276:108::o;1274:179:9:-;1332:7;1364:1;1359;:6;;1351:49;;;;;-1:-1:-1;;;1351:49:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1422:5:9;;;1274:179::o;1177:1311:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1177:1311:0;;;-1:-1:-1;1177:1311:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "sourcePath": "/Users/dennison/Documents/MerkleMint/contracts/MerkleMintCore.sol",
    "compiler": {
        "name": "solc",
        "version": "0.5.11+commit.c082d0b4"
    },
    "ast": {
        "absolutePath": "/Users/dennison/Documents/MerkleMint/contracts/MerkleMintCore.sol",
        "exportedSymbols": {
            "MerkleMintCore": [
                119
            ]
        },
        "id": 120,
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.5",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "0:23:0"
            },
            {
                "absolutePath": "/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/upgrades/contracts/Initializable.sol",
                "file": "/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/upgrades/contracts/Initializable.sol",
                "id": 2,
                "nodeType": "ImportDirective",
                "scope": 120,
                "sourceUnit": 2366,
                "src": "25:110:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
                "file": "/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721.sol",
                "id": 3,
                "nodeType": "ImportDirective",
                "scope": 120,
                "sourceUnit": 1424,
                "src": "136:134:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol",
                "file": "/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Enumerable.sol",
                "id": 4,
                "nodeType": "ImportDirective",
                "scope": 120,
                "sourceUnit": 1789,
                "src": "271:144:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
                "file": "/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Metadata.sol",
                "id": 5,
                "nodeType": "ImportDirective",
                "scope": 120,
                "sourceUnit": 1946,
                "src": "416:142:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol",
                "file": "/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721MetadataMintable.sol",
                "id": 6,
                "nodeType": "ImportDirective",
                "scope": 120,
                "sourceUnit": 2016,
                "src": "559:150:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Pausable.sol",
                "file": "/Users/dennison/Documents/MerkleMint/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC721/ERC721Pausable.sol",
                "id": 7,
                "nodeType": "ImportDirective",
                "scope": 120,
                "sourceUnit": 2106,
                "src": "710:142:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "baseContracts": [
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 8,
                            "name": "Initializable",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 2365,
                            "src": "1208:13:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Initializable_$2365",
                                "typeString": "contract Initializable"
                            }
                        },
                        "id": 9,
                        "nodeType": "InheritanceSpecifier",
                        "src": "1208:13:0"
                    },
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 10,
                            "name": "ERC721",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1423,
                            "src": "1227:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$1423",
                                "typeString": "contract ERC721"
                            }
                        },
                        "id": 11,
                        "nodeType": "InheritanceSpecifier",
                        "src": "1227:6:0"
                    },
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 12,
                            "name": "ERC721Enumerable",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1788,
                            "src": "1239:16:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721Enumerable_$1788",
                                "typeString": "contract ERC721Enumerable"
                            }
                        },
                        "id": 13,
                        "nodeType": "InheritanceSpecifier",
                        "src": "1239:16:0"
                    },
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 14,
                            "name": "ERC721Metadata",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1945,
                            "src": "1261:14:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721Metadata_$1945",
                                "typeString": "contract ERC721Metadata"
                            }
                        },
                        "id": 15,
                        "nodeType": "InheritanceSpecifier",
                        "src": "1261:14:0"
                    },
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 16,
                            "name": "ERC721MetadataMintable",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 2015,
                            "src": "1281:22:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721MetadataMintable_$2015",
                                "typeString": "contract ERC721MetadataMintable"
                            }
                        },
                        "id": 17,
                        "nodeType": "InheritanceSpecifier",
                        "src": "1281:22:0"
                    },
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 18,
                            "name": "ERC721Pausable",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 2105,
                            "src": "1309:14:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721Pausable_$2105",
                                "typeString": "contract ERC721Pausable"
                            }
                        },
                        "id": 19,
                        "nodeType": "InheritanceSpecifier",
                        "src": "1309:14:0"
                    }
                ],
                "contractDependencies": [
                    473,
                    583,
                    593,
                    2365,
                    1423,
                    1788,
                    1945,
                    2015,
                    2105,
                    2211,
                    2241,
                    2267,
                    698,
                    350,
                    146
                ],
                "contractKind": "contract",
                "documentation": "@title Complete ERC721 Non-Fungible Token Standard basic implementation with Metadata, Minting, and Pause Functionality\n@dev see https://eips.ethereum.org/EIPS/eip-721\n@dev Based on OpenZeppelin Contracts Ethereum Package\n@dev see https://github.com/OpenZeppelin/openzeppelin-contracts-ethereum-package",
                "fullyImplemented": true,
                "id": 119,
                "linearizedBaseContracts": [
                    119,
                    2105,
                    698,
                    473,
                    2015,
                    350,
                    1945,
                    2267,
                    1788,
                    2241,
                    1423,
                    2211,
                    583,
                    593,
                    146,
                    2365
                ],
                "name": "MerkleMintCore",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 117,
                            "nodeType": "Block",
                            "src": "1761:724:0",
                            "statements": [
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 34,
                                                "name": "ERC721",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1423,
                                                "src": "1771:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_ERC721_$1423_$",
                                                    "typeString": "type(contract ERC721)"
                                                }
                                            },
                                            "id": 36,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "initialize",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 897,
                                            "src": "1771:17:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 37,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1771:19:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 38,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1771:19:0"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 39,
                                                "name": "ERC721Enumerable",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1788,
                                                "src": "1800:16:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$1788_$",
                                                    "typeString": "type(contract ERC721Enumerable)"
                                                }
                                            },
                                            "id": 41,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "initialize",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1475,
                                            "src": "1800:27:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 42,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1800:29:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 43,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1800:29:0"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 47,
                                                "name": "TokenName",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 21,
                                                "src": "1865:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 48,
                                                "name": "TokenSymbol",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 23,
                                                "src": "1876:11:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                },
                                                {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 44,
                                                "name": "ERC721Metadata",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1945,
                                                "src": "1839:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$1945_$",
                                                    "typeString": "type(contract ERC721Metadata)"
                                                }
                                            },
                                            "id": 46,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "initialize",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1844,
                                            "src": "1839:25:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (string memory,string memory)"
                                            }
                                        },
                                        "id": 49,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1839:49:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 50,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1839:49:0"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 55,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2434,
                                                        "src": "2010:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_MerkleMintCore_$119",
                                                            "typeString": "contract MerkleMintCore"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_MerkleMintCore_$119",
                                                            "typeString": "contract MerkleMintCore"
                                                        }
                                                    ],
                                                    "id": 54,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "2002:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": "address"
                                                },
                                                "id": 56,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2002:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 51,
                                                "name": "ERC721MetadataMintable",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2015,
                                                "src": "1968:22:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_ERC721MetadataMintable_$2015_$",
                                                    "typeString": "type(contract ERC721MetadataMintable)"
                                                }
                                            },
                                            "id": 53,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "initialize",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1984,
                                            "src": "1968:33:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                                "typeString": "function (address)"
                                            }
                                        },
                                        "id": 57,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1968:48:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 58,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1968:48:0"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 61,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2434,
                                                        "src": "2048:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_MerkleMintCore_$119",
                                                            "typeString": "contract MerkleMintCore"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_MerkleMintCore_$119",
                                                            "typeString": "contract MerkleMintCore"
                                                        }
                                                    ],
                                                    "id": 60,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "2040:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": "address"
                                                },
                                                "id": 62,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2040:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 59,
                                            "name": "_removeMinter",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 345,
                                            "src": "2026:13:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                                "typeString": "function (address)"
                                            }
                                        },
                                        "id": 63,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2026:28:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 64,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2026:28:0"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 69,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2434,
                                                        "src": "2099:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_MerkleMintCore_$119",
                                                            "typeString": "contract MerkleMintCore"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_MerkleMintCore_$119",
                                                            "typeString": "contract MerkleMintCore"
                                                        }
                                                    ],
                                                    "id": 68,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "2091:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": "address"
                                                },
                                                "id": 70,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2091:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 65,
                                                "name": "ERC721Pausable",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 2105,
                                                "src": "2065:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_ERC721Pausable_$2105_$",
                                                    "typeString": "type(contract ERC721Pausable)"
                                                }
                                            },
                                            "id": 67,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "initialize",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 2046,
                                            "src": "2065:25:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                                "typeString": "function (address)"
                                            }
                                        },
                                        "id": 71,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2065:40:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 72,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2065:40:0"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 75,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2434,
                                                        "src": "2137:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_MerkleMintCore_$119",
                                                            "typeString": "contract MerkleMintCore"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_MerkleMintCore_$119",
                                                            "typeString": "contract MerkleMintCore"
                                                        }
                                                    ],
                                                    "id": 74,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "2129:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": "address"
                                                },
                                                "id": 76,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2129:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 73,
                                            "name": "_removePauser",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 468,
                                            "src": "2115:13:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                                "typeString": "function (address)"
                                            }
                                        },
                                        "id": 77,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2115:28:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 78,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2115:28:0"
                                },
                                {
                                    "body": {
                                        "id": 96,
                                        "nodeType": "Block",
                                        "src": "2330:47:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                        {
                                                            "argumentTypes": null,
                                                            "baseExpression": {
                                                                "argumentTypes": null,
                                                                "id": 91,
                                                                "name": "minters",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 26,
                                                                "src": "2355:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                                    "typeString": "address[] memory"
                                                                }
                                                            },
                                                            "id": 93,
                                                            "indexExpression": {
                                                                "argumentTypes": null,
                                                                "id": 92,
                                                                "name": "i",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 80,
                                                                "src": "2363:1:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "2355:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "id": 90,
                                                        "name": "_addMinter",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 329,
                                                        "src": "2344:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                                            "typeString": "function (address)"
                                                        }
                                                    },
                                                    "id": 94,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "2344:22:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 95,
                                                "nodeType": "ExpressionStatement",
                                                "src": "2344:22:0"
                                            }
                                        ]
                                    },
                                    "condition": {
                                        "argumentTypes": null,
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 86,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "argumentTypes": null,
                                            "id": 83,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 80,
                                            "src": "2305:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                            "argumentTypes": null,
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 84,
                                                "name": "minters",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 26,
                                                "src": "2309:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                    "typeString": "address[] memory"
                                                }
                                            },
                                            "id": 85,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": null,
                                            "src": "2309:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "2305:18:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 97,
                                    "initializationExpression": {
                                        "assignments": [
                                            80
                                        ],
                                        "declarations": [
                                            {
                                                "constant": false,
                                                "id": 80,
                                                "name": "i",
                                                "nodeType": "VariableDeclaration",
                                                "scope": 97,
                                                "src": "2290:9:0",
                                                "stateVariable": false,
                                                "storageLocation": "default",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "typeName": {
                                                    "id": 79,
                                                    "name": "uint256",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "2290:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "value": null,
                                                "visibility": "internal"
                                            }
                                        ],
                                        "id": 82,
                                        "initialValue": {
                                            "argumentTypes": null,
                                            "hexValue": "30",
                                            "id": 81,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2302:1:0",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "nodeType": "VariableDeclarationStatement",
                                        "src": "2290:13:0"
                                    },
                                    "loopExpression": {
                                        "expression": {
                                            "argumentTypes": null,
                                            "id": 88,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "++",
                                            "prefix": true,
                                            "src": "2325:3:0",
                                            "subExpression": {
                                                "argumentTypes": null,
                                                "id": 87,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 80,
                                                "src": "2327:1:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "id": 89,
                                        "nodeType": "ExpressionStatement",
                                        "src": "2325:3:0"
                                    },
                                    "nodeType": "ForStatement",
                                    "src": "2285:92:0"
                                },
                                {
                                    "body": {
                                        "id": 115,
                                        "nodeType": "Block",
                                        "src": "2432:47:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                        {
                                                            "argumentTypes": null,
                                                            "baseExpression": {
                                                                "argumentTypes": null,
                                                                "id": 110,
                                                                "name": "pausers",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 29,
                                                                "src": "2457:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                                    "typeString": "address[] memory"
                                                                }
                                                            },
                                                            "id": 112,
                                                            "indexExpression": {
                                                                "argumentTypes": null,
                                                                "id": 111,
                                                                "name": "i",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 99,
                                                                "src": "2465:1:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "2457:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "id": 109,
                                                        "name": "_addPauser",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 452,
                                                        "src": "2446:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                                            "typeString": "function (address)"
                                                        }
                                                    },
                                                    "id": 113,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "2446:22:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 114,
                                                "nodeType": "ExpressionStatement",
                                                "src": "2446:22:0"
                                            }
                                        ]
                                    },
                                    "condition": {
                                        "argumentTypes": null,
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 105,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "argumentTypes": null,
                                            "id": 102,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 99,
                                            "src": "2407:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                            "argumentTypes": null,
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 103,
                                                "name": "pausers",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 29,
                                                "src": "2411:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                    "typeString": "address[] memory"
                                                }
                                            },
                                            "id": 104,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": null,
                                            "src": "2411:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "2407:18:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 116,
                                    "initializationExpression": {
                                        "assignments": [
                                            99
                                        ],
                                        "declarations": [
                                            {
                                                "constant": false,
                                                "id": 99,
                                                "name": "i",
                                                "nodeType": "VariableDeclaration",
                                                "scope": 116,
                                                "src": "2392:9:0",
                                                "stateVariable": false,
                                                "storageLocation": "default",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "typeName": {
                                                    "id": 98,
                                                    "name": "uint256",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "2392:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "value": null,
                                                "visibility": "internal"
                                            }
                                        ],
                                        "id": 101,
                                        "initialValue": {
                                            "argumentTypes": null,
                                            "hexValue": "30",
                                            "id": 100,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2404:1:0",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "nodeType": "VariableDeclarationStatement",
                                        "src": "2392:13:0"
                                    },
                                    "loopExpression": {
                                        "expression": {
                                            "argumentTypes": null,
                                            "id": 107,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "++",
                                            "prefix": true,
                                            "src": "2427:3:0",
                                            "subExpression": {
                                                "argumentTypes": null,
                                                "id": 106,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 99,
                                                "src": "2429:1:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "id": 108,
                                        "nodeType": "ExpressionStatement",
                                        "src": "2427:3:0"
                                    },
                                    "nodeType": "ForStatement",
                                    "src": "2387:92:0"
                                }
                            ]
                        },
                        "documentation": "@dev Initialize the Token Contract with Minters and Pausers. The name+symbol are hardCoded.\n@param minters array of addresses that are allowed to mint.\n@param pausers array of addresses that are allowed to Pause.",
                        "id": 118,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "arguments": null,
                                "id": 32,
                                "modifierName": {
                                    "argumentTypes": null,
                                    "id": 31,
                                    "name": "initializer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2346,
                                    "src": "1749:11:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_modifier$__$",
                                        "typeString": "modifier ()"
                                    }
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1749:11:0"
                            }
                        ],
                        "name": "initialize",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 30,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 21,
                                    "name": "TokenName",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 118,
                                    "src": "1609:23:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 20,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1609:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 23,
                                    "name": "TokenSymbol",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 118,
                                    "src": "1642:25:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string"
                                    },
                                    "typeName": {
                                        "id": 22,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1642:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 26,
                                    "name": "minters",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 118,
                                    "src": "1677:24:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[]"
                                    },
                                    "typeName": {
                                        "baseType": {
                                            "id": 24,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "1677:7:0",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "id": 25,
                                        "length": null,
                                        "nodeType": "ArrayTypeName",
                                        "src": "1677:9:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                            "typeString": "address[]"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 29,
                                    "name": "pausers",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 118,
                                    "src": "1711:24:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[]"
                                    },
                                    "typeName": {
                                        "baseType": {
                                            "id": 27,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "1711:7:0",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "id": 28,
                                        "length": null,
                                        "nodeType": "ArrayTypeName",
                                        "src": "1711:9:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                            "typeString": "address[]"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1599:142:0"
                        },
                        "returnParameters": {
                            "id": 33,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1761:0:0"
                        },
                        "scope": 119,
                        "src": "1580:905:0",
                        "stateMutability": "nonpayable",
                        "superFunction": null,
                        "visibility": "public"
                    }
                ],
                "scope": 120,
                "src": "1177:1311:0"
            }
        ],
        "src": "0:2489:0"
    },
    "functionHashes": {
        "addMinter(address)": "983b2d56",
        "addPauser(address)": "82dc1ec4",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "getApproved(uint256)": "081812fc",
        "initialize()": "8129fc1c",
        "initialize(address)": "c4d66de8",
        "initialize(string,string)": "4cd88b76",
        "initialize(string,string,address[],address[])": "d94cc0e0",
        "isApprovedForAll(address,address)": "e985e9c5",
        "isMinter(address)": "aa271e1a",
        "isPauser(address)": "46fbf68e",
        "mintWithTokenURI(address,uint256,string)": "50bb4e7f",
        "name()": "06fdde03",
        "ownerOf(uint256)": "6352211e",
        "pause()": "8456cb59",
        "paused()": "5c975abb",
        "renounceMinter()": "98650275",
        "renouncePauser()": "6ef8d66d",
        "safeTransferFrom(address,address,uint256)": "42842e0e",
        "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
        "setApprovalForAll(address,bool)": "a22cb465",
        "supportsInterface(bytes4)": "01ffc9a7",
        "symbol()": "95d89b41",
        "tokenByIndex(uint256)": "4f6ccce7",
        "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
        "tokenURI(uint256)": "c87b56dd",
        "totalSupply()": "18160ddd",
        "transferFrom(address,address,uint256)": "23b872dd",
        "unpause()": "3f4ba83a"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "2248600",
            "executionCost": "2381",
            "totalCost": "2250981"
        },
        "external": {
            "addMinter(address)": "infinite",
            "addPauser(address)": "infinite",
            "approve(address,uint256)": "infinite",
            "balanceOf(address)": "infinite",
            "getApproved(uint256)": "infinite",
            "initialize()": "infinite",
            "initialize(address)": "infinite",
            "initialize(string,string)": "infinite",
            "initialize(string,string,address[],address[])": "infinite",
            "isApprovedForAll(address,address)": "772",
            "isMinter(address)": "infinite",
            "isPauser(address)": "infinite",
            "mintWithTokenURI(address,uint256,string)": "infinite",
            "name()": "infinite",
            "ownerOf(uint256)": "infinite",
            "pause()": "infinite",
            "paused()": "499",
            "renounceMinter()": "infinite",
            "renouncePauser()": "infinite",
            "safeTransferFrom(address,address,uint256)": "infinite",
            "safeTransferFrom(address,address,uint256,bytes)": "infinite",
            "setApprovalForAll(address,bool)": "infinite",
            "supportsInterface(bytes4)": "607",
            "symbol()": "infinite",
            "tokenByIndex(uint256)": "infinite",
            "tokenOfOwnerByIndex(address,uint256)": "infinite",
            "tokenURI(uint256)": "infinite",
            "totalSupply()": "466",
            "transferFrom(address,address,uint256)": "infinite",
            "unpause()": "infinite"
        }
    }
}